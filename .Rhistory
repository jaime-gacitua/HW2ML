confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)
confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
errors.train = numeric(length=10)
errors.train[1]=confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
errors.train = numeric(length=10)
ldatrain.predict <- lda(class~x.LD1, data=vtrain.lda.values, CV=TRUE)
errors.train[1]= 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2, data=vtrain.lda.values, CV=TRUE)
errors.train[2]=confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3, data=vtrain.lda.values, CV=TRUE)
errors.train[3]=confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
errors.tran
errors.train
errplot <-  ggplot() +
geom_point(data = errors.train, aes(
x = c(1,2,3)),y = errors.train[,1])
x = c(1,2,3)),y = errors.train)
errplot <-  ggplot() +
geom_point(data = errors.train, aes(
x = c(1,2,3),
y = errors.train)
errplot <-  ggplot() +
geom_point(data = errors.train, aes(
x = c(1,2,3),
y = errors.train))
errplot
errplot <-  ggplot() +
geom_point(data = errors.train, aes(
x = c(1,2,3),
y = errors.train))
errplot
errplot <-  ggplot() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3),
y = errors.train[,1]))
errplot
errplot <-  ggplot() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3),
y = errors.train[1:10]))
errplot
errplot <-  ggplot() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]))
errplot
errors.train = numeric(length=10)
ldatrain.predict <- lda(class~x.LD1, data=vtrain.lda.values, CV=TRUE)
errors.train[1] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2, data=vtrain.lda.values, CV=TRUE)
errors.train[2] = 1 -confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3, data=vtrain.lda.values, CV=TRUE)
errors.train[3] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
errors.train
errplot <-  ggplot() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]))
errplot
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]))
errplot
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=1) + scale_shape_identity()
errplot
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10])) + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) + scale_shape_identity()
errplot
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10])) + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) + scale_shape_identity()
errplot
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10])) + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16)
errplot
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16)
errplot
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate') +
errplot
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate')
errplot
ldatrain.predict <- lda(class~x.LD1, data=vtrain.lda.values, CV=TRUE)
errors.train[1] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2, data=vtrain.lda.values, CV=TRUE)
errors.train[2] = 1 -confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3, data=vtrain.lda.values, CV=TRUE)
errors.train[3] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4, data=vtrain.lda.values, CV=TRUE)
errors.train[4] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5, data=vtrain.lda.values, CV=TRUE)
errors.train[5] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6, data=vtrain.lda.values, CV=TRUE)
errors.train[6] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7, data=vtrain.lda.values, CV=TRUE)
errors.train[7] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8, data=vtrain.lda.values, CV=TRUE)
errors.train[8] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9, data=vtrain.lda.values, CV=TRUE)
errors.train[9] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9+x.LD10,
data=vtrain.lda.values, CV=TRUE)
errors.train[10] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate')
errplot
View(vtest)
vtest.lda.values <- data.frame(predict(ldatrain, vtest[,3:12]))
require(DAAG)
require(ggplot2)
require(MASS)
library(caret)
# This code implements reduced rank LDA (Fisher Discriminant Analysis)
# It can reproduce the subplots of Figure 4.8 in HTF by specifing coordinates a,b
# For example, a=1,b=3 reproduces the top-left sub-figure of Figure 4.8
a=9 # First Fisher coordinate to plot
b=10 # second Fisher coordinate to plot
################################################################
# First download the training data from the HTF website
url<-"http://www-stat.stanford.edu/~tibs/ElemStatLearn/datasets/vowel.train"
vtrain<-read.table(url,header=TRUE,sep=',')
vtrain<-as.data.frame(vtrain)
# columns are row.names,y,x.1,x.2,x.3,x.4,x.5,x.6,x.7,x.8,x.9,x.10
# y is the c  lass, and x.1 to x.10 are predictors
# Now download the test data
url<-"http://www-stat.stanford.edu/~tibs/ElemStatLearn/datasets/vowel.test"
vtest<-read.table(url,header=TRUE,sep=',')
vtest<-as.data.frame(vtest)
#################################################################
# Now find the Fisher discriminant directions using the "lda" function
ldatrain<-lda(y~x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8+x.9+x.10, data=vtrain)
ldatrain.means <- ldatrain$means
ldatrain.scaling <- ldatrain$scaling
vtrain.lda.values <- data.frame(predict(ldatrain, vtrain[,3:12]))
vtrain.lda.values.means <- data.frame(predict(ldatrain, data.frame(ldatrain.means)))
vtest.lda.values <- data.frame(predict(ldatrain, vtest[,3:12]))
plot.data <- subset(vtrain.lda.values, select= c(paste('x.LD',a,sep=''), paste('x.LD',b,sep='')))
plot.data.means <- subset(vtrain.lda.values.means, select= c(paste('x.LD',a,sep=''), paste('x.LD',b,sep='')))
p <- ggplot() +
geom_point(data = plot.data, aes(
x = plot.data[,1],
y = plot.data[,2],
color=factor(vtrain.lda.values$class), shape=1)) +
xlab(paste('Coordinate ',a)) +
ylab(paste('Coordinate ',b)) +
geom_point(data = plot.data.means, aes(
x = plot.data.means[,1],
y = plot.data.means[,2],
colour=factor(vtrain.lda.values.means$class), shape=1, stroke=5, size=10)) +
scale_shape_identity() + theme(legend.position="none")
p
# Now we us LDA again to predict values in the training set and the test set
errors.train = numeric(length=10)
errors.test = numeric(length=10)
ldatrain.predict <- lda(class~x.LD1, data=vtrain.lda.values, CV=TRUE)
errors.train[1] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2, data=vtrain.lda.values, CV=TRUE)
errors.train[2] = 1 -confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3, data=vtrain.lda.values, CV=TRUE)
errors.train[3] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4, data=vtrain.lda.values, CV=TRUE)
errors.train[4] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5, data=vtrain.lda.values, CV=TRUE)
errors.train[5] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6, data=vtrain.lda.values, CV=TRUE)
errors.train[6] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7, data=vtrain.lda.values, CV=TRUE)
errors.train[7] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8, data=vtrain.lda.values, CV=TRUE)
errors.train[8] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9, data=vtrain.lda.values, CV=TRUE)
errors.train[9] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9+x.LD10,
data=vtrain.lda.values, CV=TRUE)
errors.train[10] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1, data=vtest.lda.values, CV=TRUE)
errors.test[1] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2, data=vtest.lda.values, CV=TRUE)
errors.test[2] = 1 -confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3, data=vtest.lda.values, CV=TRUE)
errors.test[3] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4, data=vtest.lda.values, CV=TRUE)
errors.test[4] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5, data=vtest.lda.values, CV=TRUE)
errors.test[5] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6, data=vtest.lda.values, CV=TRUE)
errors.test[6] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7, data=vtest.lda.values, CV=TRUE)
errors.test[7] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8, data=vtest.lda.values, CV=TRUE)
errors.test[8] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9, data=vtest.lda.values, CV=TRUE)
errors.test[9] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9+x.LD10,
data=vtest.lda.values, CV=TRUE)
errors.test[10] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate')
geom_line(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), colour="orange") +
geom_point(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), shape=16) +
errplot
# Now we us LDA again to predict values in the training set and the test set
errors.train = numeric(length=10)
errors.test = numeric(length=10)
ldatrain.predict <- lda(class~x.LD1, data=vtrain.lda.values, CV=TRUE)
errors.train[1] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2, data=vtrain.lda.values, CV=TRUE)
errors.train[2] = 1 -confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3, data=vtrain.lda.values, CV=TRUE)
errors.train[3] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4, data=vtrain.lda.values, CV=TRUE)
errors.train[4] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5, data=vtrain.lda.values, CV=TRUE)
errors.train[5] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6, data=vtrain.lda.values, CV=TRUE)
errors.train[6] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7, data=vtrain.lda.values, CV=TRUE)
errors.train[7] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8, data=vtrain.lda.values, CV=TRUE)
errors.train[8] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9, data=vtrain.lda.values, CV=TRUE)
errors.train[9] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9+x.LD10,
data=vtrain.lda.values, CV=TRUE)
errors.train[10] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1, data=vtest.lda.values, CV=TRUE)
errors.test[1] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2, data=vtest.lda.values, CV=TRUE)
errors.test[2] = 1 -confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3, data=vtest.lda.values, CV=TRUE)
errors.test[3] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4, data=vtest.lda.values, CV=TRUE)
errors.test[4] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5, data=vtest.lda.values, CV=TRUE)
errors.test[5] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6, data=vtest.lda.values, CV=TRUE)
errors.test[6] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7, data=vtest.lda.values, CV=TRUE)
errors.test[7] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8, data=vtest.lda.values, CV=TRUE)
errors.test[8] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9, data=vtest.lda.values, CV=TRUE)
errors.test[9] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
ldatrain.predict <- lda(class~x.LD1+x.LD2+x.LD3+x.LD4+x.LD5+x.LD6+x.LD7+x.LD8+x.LD9+x.LD10,
data=vtest.lda.values, CV=TRUE)
errors.test[10] = 1- confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)$overall[1]
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate')
geom_line(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), colour="orange") +
geom_point(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), shape=16) +
errplot
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate') +
geom_line(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), colour="orange") +
geom_point(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), shape=16) +
errplot
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate') +
geom_line(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), colour="orange") +
geom_point(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), shape=16)
errplot
confusionMatrix(ldatrain.predict$class,vtest.lda.values$class)
ldatrain.predict <- predict(ldatrain.predict, vtrain.lda.values$class)
predict(ldatrain.predict, vtrain.lda.values$class)
vtrain.lda.values
View(vtrain.lda.values)
vtrain.lda.values1 <- data.frame(predict(ldatrain.predict, vtrain.lda.values))
vtrain.lda.values1 <- data.frame(predict(ldatrain.predict, vtrain.lda.values$class))
vtrain.lda.values1 <- data.frame(predict(ldatrain.predict$class, vtrain.lda.values$class))
ldatrain
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=1)
errors.train[1] = 1- confusionMatrix(ldatrain.predict$class,vtrain.lda.values$class)$overall[1]
ldatrain.predict
confusionMatrix(ldatrain.predict$class,vtrain$y)
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=1)
errors.train[1] = 1- confusionMatrix(ldatrain.predict$class,vtrain$y)$overall[1]
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class,vtrain$y)$overall[1]
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class,vtrain$y)$overall[1]
}
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class,vtrain$y)$overall[1]
}
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
errors.test[t] = 1- confusionMatrix(ldatrain.predict$class, vtest$y)$overall[1]
}
}
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
errors.test[t] = 1- confusionMatrix(ldatrain.predict$class, vtest$y)$overall[1]
}
rep=10
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
errors.test[t] = 1- confusionMatrix(ldatrain.predict$class, vtest$y)$overall[1]
}
errors.test[t] = 1- confusionMatrix(ldatrain.predict$class, vtest$y)$overall[1]
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
errors.test[t] = 1- confusionMatrix(ldatest.predict$class, vtest$y)$overall[1]
}
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
errors.test[t] = 1- confusionMatrix(ldatest.predict$class, vtest$y)$overall[1]
}
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
errors.test[t] = 1- confusionMatrix(ldatest.predict$class, vtest$y)$overall[1]
}
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
errors.test[t] = 1- confusionMatrix(ldatest.predict$class, vtest$y)$overall[1]
}
print confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
print( confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1])
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12]), dimen=t)
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
print( confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1])
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12]), dimen=t)
errors.test[t] = 1- confusionMatrix(ldatest.predict$class, vtest$y)$overall[1]
}
ldatrain.predict <- predict(ldatrain, vtrain[,3:12]), dimen=t
)
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12], dimen=t))
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12], dimen=t))
errors.test[t] = 1- confusionMatrix(ldatest.predict$class, vtest$y)$overall[1]
}
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate') +
geom_line(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), colour="orange") +
geom_point(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), shape=16)
errplot
for(t in 1:rep){
ldatrain.predict <- data.frame(predict(ldatrain, vtrain[,3:12], dimen=t))
errors.train[t] = 1- confusionMatrix(ldatrain.predict$class, vtrain$y)$overall[1]
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12], dimen=t))
errors.test[t] = 1- confusionMatrix(ldatest.predict$class, vtest$y)$overall[1]
}
rm(errplot)
errplot <-  ggplot() +
geom_line(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), colour="blue") + scale_shape_identity() +
geom_point(data = data.frame(errors.train), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.train[1:10]), shape=16) +
xlab('Dimension') +
ylab('Misclassification Rate') +
geom_line(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), colour="orange") +
geom_point(data = data.frame(errors.test), aes(
x = c(1,2,3,4,5,6,7,8,9,10),
y = errors.test[1:10]), shape=16) +
ggtitle('LDA and Dimension Reduction on the Vowel Data')
errplot
for(t = 2){
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12], dimen=t))
confusionMatrix(ldatest.predict$class, vtest$y)$overall[1]
}
for(t = 2){
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12], dimen=t))
confusionMatrix(ldatest.predict$class, vtest$y)
for(t = 2){
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12], dimen=t))
confusionMatrix(ldatest.predict$class, vtest$y)
}
for(t in 2:2){
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12], dimen=t))
confusionMatrix(ldatest.predict$class, vtest$y)
}
confusionMatrix(ldatest.predict$class, vtest$y)
for(t in 2:2){
ldatest.predict <- data.frame(predict(ldatrain, vtest[,3:12], dimen=t))
confusionMatrix(ldatest.predict$class, vtest$y)
}
